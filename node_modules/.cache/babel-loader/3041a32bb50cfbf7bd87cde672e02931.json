{"ast":null,"code":"import _objectSpread from \"C:/Users/HABIB/Desktop/excalidraw/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/HABIB/Desktop/excalidraw/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HABIB/Desktop/excalidraw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/HABIB/Desktop/excalidraw/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HABIB\\\\Desktop\\\\excalidraw\\\\src\\\\App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Excalidraw, { exportToCanvas, exportToSvg, exportToBlob, serializeAsJSON } from \"@excalidraw/excalidraw\";\nimport InitialData from \"./initialData\";\nimport \"./App.scss\";\nimport initialData from \"./initialData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar resolvablePromise = function resolvablePromise() {\n  var resolve;\n  var reject;\n  var promise = new Promise(function (_resolve, _reject) {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n};\n\nvar renderTopRightUI = function renderTopRightUI() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: function onClick() {\n      return alert(\"This is dummy top right UI\");\n    },\n    children: [\" \", \"Click me\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\nvar renderFooter = function renderFooter() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: function onClick() {\n      return alert(\"This is dummy footer\");\n    },\n    children: [\" \", \"custom footer\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default function App() {\n  _s();\n\n  var excalidrawRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewModeEnabled = _useState2[0],\n      setViewModeEnabled = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      zenModeEnabled = _useState4[0],\n      setZenModeEnabled = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      gridModeEnabled = _useState6[0],\n      setGridModeEnabled = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      blobUrl = _useState8[0],\n      setBlobUrl = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      canvasUrl = _useState10[0],\n      setCanvasUrl = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      exportWithDarkMode = _useState12[0],\n      setExportWithDarkMode = _useState12[1];\n\n  var _useState13 = useState(\"light\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      theme = _useState14[0],\n      setTheme = _useState14[1];\n\n  var initialStatePromiseRef = useRef({\n    promise: null\n  });\n  console.log(initialStatePromiseRef.current.promise);\n\n  if (!initialStatePromiseRef.current.promise) {\n    initialStatePromiseRef.current.promise = resolvablePromise();\n  }\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, imageData, reader;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/rocket.jpeg\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.blob();\n\n              case 5:\n                imageData = _context.sent;\n                reader = new FileReader();\n                reader.readAsDataURL(imageData);\n\n                reader.onload = function () {\n                  var imagesArray = [{\n                    id: \"rocket\",\n                    dataURL: reader.result,\n                    mimeType: \"image/jpeg\",\n                    created: 1644915140367\n                  }];\n                  initialStatePromiseRef.current.promise.resolve(InitialData);\n                  excalidrawRef.current.addFiles(imagesArray);\n                };\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n\n    var onHashChange = function onHashChange() {\n      var hash = new URLSearchParams(window.location.hash.slice(1));\n      var libraryUrl = hash.get(\"addLibrary\");\n\n      if (libraryUrl) {\n        excalidrawRef.current.importLibrary(libraryUrl, hash.get(\"token\"));\n      }\n    };\n\n    window.addEventListener(\"hashchange\", onHashChange, false);\n    return function () {\n      window.removeEventListener(\"hashchange\", onHashChange);\n    };\n  }, []);\n\n  var updateScene = function updateScene() {\n    var sceneData = {\n      elements: [{\n        type: \"rectangle\",\n        version: 141,\n        versionNonce: 361174001,\n        isDeleted: false,\n        id: \"oDVXy8D6rom3H1-LLH2-f\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        roughness: 1,\n        opacity: 100,\n        angle: 0,\n        x: 100.50390625,\n        y: 193.67578125,\n        strokeColor: \"#c92a2a\",\n        backgroundColor: \"transparent\",\n        width: 186.47265625,\n        height: 141.9765625,\n        seed: 1968410350,\n        groupIds: []\n      }],\n      appState: {\n        viewBackgroundColor: \"#edf2ff\"\n      }\n    };\n    excalidrawRef.current.updateScene(sceneData);\n  };\n\n  var onLinkOpen = useCallback(function (element, event) {\n    var link = element.link;\n    var nativeEvent = event.detail.nativeEvent;\n    var isNewTab = nativeEvent.ctrlKey || nativeEvent.metaKey;\n    var isNewWindow = nativeEvent.shiftKey;\n    var isInternalLink = link.startsWith(\"/\") || link.includes(window.location.origin);\n\n    if (isInternalLink && !isNewTab && !isNewWindow) {\n      // signal that we're handling the redirect ourselves\n      event.preventDefault(); // do a custom redirect, such as passing to react-router\n      // ...\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-scene\",\n        onClick: updateScene,\n        children: \"Update Scene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: viewModeEnabled,\n          onChange: function onChange() {\n            return setViewModeEnabled(!viewModeEnabled);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), \"View mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: zenModeEnabled,\n          onChange: function onChange() {\n            return setZenModeEnabled(!zenModeEnabled);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), \"Zen mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: gridModeEnabled,\n          onChange: function onChange() {\n            return setGridModeEnabled(!gridModeEnabled);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), \"Grid mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: theme === \"dark\",\n          onChange: function onChange() {\n            var newTheme = \"light\";\n\n            if (theme === \"light\") {\n              newTheme = \"dark\";\n            }\n\n            setTheme(newTheme);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), \"Switch to Dark Theme\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"excalidraw-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Excalidraw, {\n        ref: excalidrawRef,\n        initialData: initialStatePromiseRef.current.promise // onChange={\n        //   (elements, state, flies) =>\n        //     // console.info(\"Elements :\", elements, \"State : \", state)\n        //     console.log(excalidrawRef.current.getSceneElements())\n        //   // console.info(\"Elements :\", elements)\n        // }\n        // onPointerUpdate={(payload) => console.info(payload)}\n        ,\n        onCollabButtonClick: function onCollabButtonClick() {\n          return window.alert(\"You clicked on collab button\");\n        } // viewModeEnabled={viewModeEnabled}\n        // zenModeEnabled={zenModeEnabled}\n        // gridModeEnabled={gridModeEnabled}\n        ,\n        theme: theme,\n        name: \"Custom name of drawing\",\n        UIOptions: {\n          canvasActions: {\n            loadScene: false\n          }\n        },\n        renderTopRightUI: renderTopRightUI // renderFooter={renderFooter}\n        ,\n        onLinkOpen: onLinkOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"export-wrapper button-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"export-wrapper__checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: exportWithDarkMode,\n          onChange: function onChange() {\n            return setExportWithDarkMode(!exportWithDarkMode);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), \"Export with dark mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var svg;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return exportToSvg({\n                    elements: excalidrawRef.current.getSceneElements(),\n                    appState: _objectSpread(_objectSpread({}, initialData.appState), {}, {\n                      exportWithDarkMode: exportWithDarkMode,\n                      width: 300,\n                      height: 100\n                    }),\n                    embedScene: true,\n                    files: excalidrawRef.current.getFiles()\n                  });\n\n                case 2:\n                  svg = _context2.sent;\n                  document.querySelector(\".export-svg\").innerHTML = svg.outerHTML;\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        })),\n        children: \"Export to SVG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export export-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var blob;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return exportToBlob({\n                    elements: excalidrawRef.current.getSceneElements(),\n                    mimeType: \"image/png\",\n                    appState: _objectSpread(_objectSpread({}, initialData.appState), {}, {\n                      exportWithDarkMode: exportWithDarkMode\n                    }),\n                    files: excalidrawRef.current.getFiles()\n                  });\n\n                case 2:\n                  blob = _context3.sent;\n                  setBlobUrl(window.URL.createObjectURL(blob));\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        })),\n        children: \"Export to Blob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export export-blob\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: blobUrl,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var canvas, ctx;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return exportToCanvas({\n                    elements: excalidrawRef.current.getSceneElements(),\n                    appState: _objectSpread(_objectSpread({}, initialData.appState), {}, {\n                      exportWithDarkMode: exportWithDarkMode\n                    }),\n                    files: excalidrawRef.current.getFiles()\n                  });\n\n                case 2:\n                  canvas = _context4.sent;\n                  ctx = canvas.getContext(\"2d\");\n                  ctx.font = \"30px Virgil\";\n                  ctx.strokeText(\"My custom text\", 50, 60);\n                  setCanvasUrl(canvas.toDataURL());\n\n                case 7:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        })),\n        children: \"Export to Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export export-canvas\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: canvasUrl,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          var json;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return serializeAsJSON({\n                    elements: initialData.elements\n                  });\n\n                case 2:\n                  json = _context5.sent;\n                  _context5.t0 = console;\n                  _context5.next = 6;\n                  return json;\n\n                case 6:\n                  _context5.t1 = _context5.sent;\n\n                  _context5.t0.log.call(_context5.t0, _context5.t1);\n\n                case 8:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        })),\n        children: \"Export as json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7GmTfVvpqnaJHKgIg6eQJKiUVQ4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Excalidraw","exportToCanvas","exportToSvg","exportToBlob","serializeAsJSON","InitialData","initialData","resolvablePromise","resolve","reject","promise","Promise","_resolve","_reject","renderTopRightUI","alert","renderFooter","App","excalidrawRef","viewModeEnabled","setViewModeEnabled","zenModeEnabled","setZenModeEnabled","gridModeEnabled","setGridModeEnabled","blobUrl","setBlobUrl","canvasUrl","setCanvasUrl","exportWithDarkMode","setExportWithDarkMode","theme","setTheme","initialStatePromiseRef","console","log","current","fetchData","fetch","res","blob","imageData","reader","FileReader","readAsDataURL","onload","imagesArray","id","dataURL","result","mimeType","created","addFiles","onHashChange","hash","URLSearchParams","window","location","slice","libraryUrl","get","importLibrary","addEventListener","removeEventListener","updateScene","sceneData","elements","type","version","versionNonce","isDeleted","fillStyle","strokeWidth","strokeStyle","roughness","opacity","angle","x","y","strokeColor","backgroundColor","width","height","seed","groupIds","appState","viewBackgroundColor","onLinkOpen","element","event","link","nativeEvent","detail","isNewTab","ctrlKey","metaKey","isNewWindow","shiftKey","isInternalLink","startsWith","includes","origin","preventDefault","newTheme","canvasActions","loadScene","getSceneElements","embedScene","files","getFiles","svg","document","querySelector","innerHTML","outerHTML","URL","createObjectURL","canvas","ctx","getContext","font","strokeText","toDataURL","json"],"sources":["C:/Users/HABIB/Desktop/excalidraw/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Excalidraw, {\n  exportToCanvas,\n  exportToSvg,\n  exportToBlob,\n  serializeAsJSON,\n} from \"@excalidraw/excalidraw\";\nimport InitialData from \"./initialData\";\n\nimport \"./App.scss\";\nimport initialData from \"./initialData\";\n\nconst resolvablePromise = () => {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n};\n\nconst renderTopRightUI = () => {\n  return (\n    <button onClick={() => alert(\"This is dummy top right UI\")}>\n      {\" \"}\n      Click me{\" \"}\n    </button>\n  );\n};\n\nconst renderFooter = () => {\n  return (\n    <button onClick={() => alert(\"This is dummy footer\")}>\n      {\" \"}\n      custom footer{\" \"}\n    </button>\n  );\n};\n\nexport default function App() {\n  const excalidrawRef = useRef(null);\n\n  const [viewModeEnabled, setViewModeEnabled] = useState(false);\n  const [zenModeEnabled, setZenModeEnabled] = useState(false);\n  const [gridModeEnabled, setGridModeEnabled] = useState(false);\n  const [blobUrl, setBlobUrl] = useState(null);\n  const [canvasUrl, setCanvasUrl] = useState(null);\n  const [exportWithDarkMode, setExportWithDarkMode] = useState(false);\n  const [theme, setTheme] = useState(\"light\");\n\n  const initialStatePromiseRef = useRef({ promise: null });\n  console.log(initialStatePromiseRef.current.promise);\n  if (!initialStatePromiseRef.current.promise) {\n    initialStatePromiseRef.current.promise = resolvablePromise();\n  }\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\"/rocket.jpeg\");\n      const imageData = await res.blob();\n      const reader = new FileReader();\n      reader.readAsDataURL(imageData);\n\n      reader.onload = function () {\n        const imagesArray = [\n          {\n            id: \"rocket\",\n            dataURL: reader.result,\n            mimeType: \"image/jpeg\",\n            created: 1644915140367,\n          },\n        ];\n\n        initialStatePromiseRef.current.promise.resolve(InitialData);\n        excalidrawRef.current.addFiles(imagesArray);\n      };\n    };\n    fetchData();\n\n    const onHashChange = () => {\n      const hash = new URLSearchParams(window.location.hash.slice(1));\n      const libraryUrl = hash.get(\"addLibrary\");\n      if (libraryUrl) {\n        excalidrawRef.current.importLibrary(libraryUrl, hash.get(\"token\"));\n      }\n    };\n    window.addEventListener(\"hashchange\", onHashChange, false);\n    return () => {\n      window.removeEventListener(\"hashchange\", onHashChange);\n    };\n  }, []);\n\n  const updateScene = () => {\n    const sceneData = {\n      elements: [\n        {\n          type: \"rectangle\",\n          version: 141,\n          versionNonce: 361174001,\n          isDeleted: false,\n          id: \"oDVXy8D6rom3H1-LLH2-f\",\n          fillStyle: \"hachure\",\n          strokeWidth: 1,\n          strokeStyle: \"solid\",\n          roughness: 1,\n          opacity: 100,\n          angle: 0,\n          x: 100.50390625,\n          y: 193.67578125,\n          strokeColor: \"#c92a2a\",\n          backgroundColor: \"transparent\",\n          width: 186.47265625,\n          height: 141.9765625,\n          seed: 1968410350,\n          groupIds: [],\n        },\n      ],\n      appState: {\n        viewBackgroundColor: \"#edf2ff\",\n      },\n    };\n    excalidrawRef.current.updateScene(sceneData);\n  };\n\n  const onLinkOpen = useCallback((element, event) => {\n    const link = element.link;\n    const { nativeEvent } = event.detail;\n    const isNewTab = nativeEvent.ctrlKey || nativeEvent.metaKey;\n    const isNewWindow = nativeEvent.shiftKey;\n    const isInternalLink =\n      link.startsWith(\"/\") || link.includes(window.location.origin);\n    if (isInternalLink && !isNewTab && !isNewWindow) {\n      // signal that we're handling the redirect ourselves\n      event.preventDefault();\n      // do a custom redirect, such as passing to react-router\n      // ...\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"button-wrapper\">\n        <button className=\"update-scene\" onClick={updateScene}>\n          Update Scene\n        </button>\n\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={viewModeEnabled}\n            onChange={() => setViewModeEnabled(!viewModeEnabled)}\n          />\n          View mode\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={zenModeEnabled}\n            onChange={() => setZenModeEnabled(!zenModeEnabled)}\n          />\n          Zen mode\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={gridModeEnabled}\n            onChange={() => setGridModeEnabled(!gridModeEnabled)}\n          />\n          Grid mode\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={theme === \"dark\"}\n            onChange={() => {\n              let newTheme = \"light\";\n              if (theme === \"light\") {\n                newTheme = \"dark\";\n              }\n              setTheme(newTheme);\n            }}\n          />\n          Switch to Dark Theme\n        </label>\n      </div>\n      <div className=\"excalidraw-wrapper\">\n        <Excalidraw\n          ref={excalidrawRef}\n          initialData={initialStatePromiseRef.current.promise}\n          // onChange={\n          //   (elements, state, flies) =>\n          //     // console.info(\"Elements :\", elements, \"State : \", state)\n          //     console.log(excalidrawRef.current.getSceneElements())\n          //   // console.info(\"Elements :\", elements)\n          // }\n          // onPointerUpdate={(payload) => console.info(payload)}\n          onCollabButtonClick={() =>\n            window.alert(\"You clicked on collab button\")\n          }\n          // viewModeEnabled={viewModeEnabled}\n          // zenModeEnabled={zenModeEnabled}\n          // gridModeEnabled={gridModeEnabled}\n          theme={theme}\n          name=\"Custom name of drawing\"\n          UIOptions={{ canvasActions: { loadScene: false } }}\n          renderTopRightUI={renderTopRightUI}\n          // renderFooter={renderFooter}\n          onLinkOpen={onLinkOpen}\n        />\n      </div>\n\n      <div className=\"export-wrapper button-wrapper\">\n        <label className=\"export-wrapper__checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={exportWithDarkMode}\n            onChange={() => setExportWithDarkMode(!exportWithDarkMode)}\n          />\n          Export with dark mode\n        </label>\n        <button\n          onClick={async () => {\n            const svg = await exportToSvg({\n              elements: excalidrawRef.current.getSceneElements(),\n              appState: {\n                ...initialData.appState,\n                exportWithDarkMode,\n                width: 300,\n                height: 100,\n              },\n              embedScene: true,\n              files: excalidrawRef.current.getFiles(),\n            });\n            document.querySelector(\".export-svg\").innerHTML = svg.outerHTML;\n          }}\n        >\n          Export to SVG\n        </button>\n        <div className=\"export export-svg\"></div>\n\n        <button\n          onClick={async () => {\n            const blob = await exportToBlob({\n              elements: excalidrawRef.current.getSceneElements(),\n              mimeType: \"image/png\",\n              appState: {\n                ...initialData.appState,\n                exportWithDarkMode,\n              },\n              files: excalidrawRef.current.getFiles(),\n            });\n            setBlobUrl(window.URL.createObjectURL(blob));\n          }}\n        >\n          Export to Blob\n        </button>\n        <div className=\"export export-blob\">\n          <img src={blobUrl} alt=\"\" />\n        </div>\n\n        <button\n          onClick={async () => {\n            const canvas = await exportToCanvas({\n              elements: excalidrawRef.current.getSceneElements(),\n              appState: {\n                ...initialData.appState,\n                exportWithDarkMode,\n              },\n              files: excalidrawRef.current.getFiles(),\n            });\n            const ctx = canvas.getContext(\"2d\");\n            ctx.font = \"30px Virgil\";\n            ctx.strokeText(\"My custom text\", 50, 60);\n            setCanvasUrl(canvas.toDataURL());\n          }}\n        >\n          Export to Canvas\n        </button>\n\n        <div className=\"export export-canvas\">\n          <img src={canvasUrl} alt=\"\" />\n        </div>\n\n        <button\n          onClick={async () => {\n            const json = await serializeAsJSON({\n              elements: initialData.elements,\n            });\n            console.log(await json);\n            // const ctx = canvas.getContext(\"2d\");\n            // ctx.font = \"30px Virgil\";\n            // ctx.strokeText(\"My custom text\", 50, 60);\n            // setCanvasUrl(canvas.toDataURL());\n          }}\n        >\n          Export as json\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}