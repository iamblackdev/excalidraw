{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HABIB/Desktop/excalidraw/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HABIB/Desktop/excalidraw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/HABIB/Desktop/excalidraw/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HABIB\\\\Desktop\\\\excalidraw\\\\src\\\\App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Excalidraw, { exportToCanvas, exportToSvg, exportToBlob, serializeAsJSON } from \"@excalidraw/excalidraw\";\nimport InitialData from \"./initialData\";\nimport Sidebar from \"./sidebar/Sidebar\";\nimport \"./App.scss\";\nimport initialData from \"./initialData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar resolvablePromise = function resolvablePromise() {\n  var resolve;\n  var reject;\n  var promise = new Promise(function (_resolve, _reject) {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n};\n\nvar renderTopRightUI = function renderTopRightUI() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: function onClick() {\n      return alert(\"This is dummy top right UI\");\n    },\n    children: [\" \", \"Click me\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\nvar renderFooter = function renderFooter() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: function onClick() {\n      return alert(\"This is dummy footer\");\n    },\n    children: [\" \", \"custom footer\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default function App() {\n  _s();\n\n  var excalidrawRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewModeEnabled = _useState2[0],\n      setViewModeEnabled = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      zenModeEnabled = _useState4[0],\n      setZenModeEnabled = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      gridModeEnabled = _useState6[0],\n      setGridModeEnabled = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      blobUrl = _useState8[0],\n      setBlobUrl = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      canvasUrl = _useState10[0],\n      setCanvasUrl = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      exportWithDarkMode = _useState12[0],\n      setExportWithDarkMode = _useState12[1];\n\n  var _useState13 = useState(\"light\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      theme = _useState14[0],\n      setTheme = _useState14[1];\n\n  var initialStatePromiseRef = useRef({\n    promise: null\n  });\n\n  if (!initialStatePromiseRef.current.promise) {\n    initialStatePromiseRef.current.promise = resolvablePromise();\n  }\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, imageData, reader;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/rocket.jpeg\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.blob();\n\n              case 5:\n                imageData = _context.sent;\n                reader = new FileReader();\n                reader.readAsDataURL(imageData);\n\n                reader.onload = function () {\n                  var imagesArray = [{\n                    id: \"rocket\",\n                    dataURL: reader.result,\n                    mimeType: \"image/jpeg\",\n                    created: 1644915140367\n                  }];\n                  initialStatePromiseRef.current.promise.resolve(InitialData);\n                  excalidrawRef.current.addFiles(imagesArray);\n                };\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n\n    var onHashChange = function onHashChange() {\n      var hash = new URLSearchParams(window.location.hash.slice(1));\n      var libraryUrl = hash.get(\"addLibrary\");\n\n      if (libraryUrl) {\n        excalidrawRef.current.importLibrary(libraryUrl, hash.get(\"token\"));\n      }\n    };\n\n    window.addEventListener(\"hashchange\", onHashChange, false);\n    return function () {\n      window.removeEventListener(\"hashchange\", onHashChange);\n    };\n  }, []);\n\n  var updateScene = function updateScene() {\n    var sceneData = {\n      elements: [{\n        type: \"rectangle\",\n        version: 141,\n        versionNonce: 361174001,\n        isDeleted: false,\n        id: \"oDVXy8D6rom3H1-LLH2-f\",\n        fillStyle: \"hachure\",\n        strokeWidth: 1,\n        strokeStyle: \"solid\",\n        roughness: 1,\n        opacity: 100,\n        angle: 0,\n        x: 100.50390625,\n        y: 93.67578125,\n        strokeColor: \"#c92a2a\",\n        backgroundColor: \"transparent\",\n        width: 186.47265625,\n        height: 141.9765625,\n        seed: 1968410350,\n        groupIds: []\n      }],\n      appState: {\n        viewBackgroundColor: \"#edf2ff\"\n      }\n    };\n    excalidrawRef.current.updateScene(sceneData);\n  };\n\n  var onLinkOpen = useCallback(function (element, event) {\n    var link = element.link;\n    var nativeEvent = event.detail.nativeEvent;\n    var isNewTab = nativeEvent.ctrlKey || nativeEvent.metaKey;\n    var isNewWindow = nativeEvent.shiftKey;\n    var isInternalLink = link.startsWith(\"/\") || link.includes(window.location.origin);\n\n    if (isInternalLink && !isNewTab && !isNewWindow) {\n      // signal that we're handling the redirect ourselves\n      event.preventDefault(); // do a custom redirect, such as passing to react-router\n      // ...\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Excalidraw Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-scene\",\n          onClick: updateScene,\n          children: \"Update Scene\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-scene\",\n          onClick: function onClick() {\n            excalidrawRef.current.resetScene();\n          },\n          children: \"Reset Scene\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            excalidrawRef.current.updateScene({\n              libraryItems: [{\n                status: \"published\",\n                elements: initialData.libraryItems[0]\n              }, {\n                status: \"unpublished\",\n                elements: initialData.libraryItems[1]\n              }]\n            });\n          },\n          children: \"Update Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: viewModeEnabled,\n            onChange: function onChange() {\n              return setViewModeEnabled(!viewModeEnabled);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), \"View mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: zenModeEnabled,\n            onChange: function onChange() {\n              return setZenModeEnabled(!zenModeEnabled);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), \"Zen mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: gridModeEnabled,\n            onChange: function onChange() {\n              return setGridModeEnabled(!gridModeEnabled);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), \"Grid mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: theme === \"dark\",\n            onChange: function onChange() {\n              var newTheme = \"light\";\n\n              if (theme === \"light\") {\n                newTheme = \"dark\";\n              }\n\n              setTheme(newTheme);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), \"Switch to Dark Theme\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excalidraw-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Excalidraw, {\n          ref: excalidrawRef,\n          initialData: initialStatePromiseRef.current.promise,\n          onChange: function onChange(elements, state) {\n            return (// console.info(\"Elements :\", elements, \"State : \", state)\n              console.info(\"Elements :\", elements)\n            );\n          } // onPointerUpdate={(payload) => console.info(payload)}\n          ,\n          onCollabButtonClick: function onCollabButtonClick() {\n            return window.alert(\"You clicked on collab button\");\n          },\n          viewModeEnabled: viewModeEnabled,\n          zenModeEnabled: zenModeEnabled,\n          gridModeEnabled: gridModeEnabled,\n          theme: theme,\n          name: \"Custom name of drawing\",\n          UIOptions: {\n            canvasActions: {\n              loadScene: false\n            }\n          },\n          renderTopRightUI: renderTopRightUI,\n          renderFooter: renderFooter,\n          onLinkOpen: onLinkOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export-wrapper button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"export-wrapper__checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: exportWithDarkMode,\n            onChange: function onChange() {\n              return setExportWithDarkMode(!exportWithDarkMode);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), \"Export with dark mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7GmTfVvpqnaJHKgIg6eQJKiUVQ4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Excalidraw","exportToCanvas","exportToSvg","exportToBlob","serializeAsJSON","InitialData","Sidebar","initialData","resolvablePromise","resolve","reject","promise","Promise","_resolve","_reject","renderTopRightUI","alert","renderFooter","App","excalidrawRef","viewModeEnabled","setViewModeEnabled","zenModeEnabled","setZenModeEnabled","gridModeEnabled","setGridModeEnabled","blobUrl","setBlobUrl","canvasUrl","setCanvasUrl","exportWithDarkMode","setExportWithDarkMode","theme","setTheme","initialStatePromiseRef","current","fetchData","fetch","res","blob","imageData","reader","FileReader","readAsDataURL","onload","imagesArray","id","dataURL","result","mimeType","created","addFiles","onHashChange","hash","URLSearchParams","window","location","slice","libraryUrl","get","importLibrary","addEventListener","removeEventListener","updateScene","sceneData","elements","type","version","versionNonce","isDeleted","fillStyle","strokeWidth","strokeStyle","roughness","opacity","angle","x","y","strokeColor","backgroundColor","width","height","seed","groupIds","appState","viewBackgroundColor","onLinkOpen","element","event","link","nativeEvent","detail","isNewTab","ctrlKey","metaKey","isNewWindow","shiftKey","isInternalLink","startsWith","includes","origin","preventDefault","resetScene","libraryItems","status","newTheme","state","console","info","canvasActions","loadScene"],"sources":["C:/Users/HABIB/Desktop/excalidraw/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport Excalidraw, {\n  exportToCanvas,\n  exportToSvg,\n  exportToBlob,\n  serializeAsJSON,\n} from \"@excalidraw/excalidraw\";\nimport InitialData from \"./initialData\";\nimport Sidebar from \"./sidebar/Sidebar\";\n\nimport \"./App.scss\";\nimport initialData from \"./initialData\";\n\nconst resolvablePromise = () => {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n};\n\nconst renderTopRightUI = () => {\n  return (\n    <button onClick={() => alert(\"This is dummy top right UI\")}>\n      {\" \"}\n      Click me{\" \"}\n    </button>\n  );\n};\n\nconst renderFooter = () => {\n  return (\n    <button onClick={() => alert(\"This is dummy footer\")}>\n      {\" \"}\n      custom footer{\" \"}\n    </button>\n  );\n};\n\nexport default function App() {\n  const excalidrawRef = useRef(null);\n\n  const [viewModeEnabled, setViewModeEnabled] = useState(false);\n  const [zenModeEnabled, setZenModeEnabled] = useState(false);\n  const [gridModeEnabled, setGridModeEnabled] = useState(false);\n  const [blobUrl, setBlobUrl] = useState(null);\n  const [canvasUrl, setCanvasUrl] = useState(null);\n  const [exportWithDarkMode, setExportWithDarkMode] = useState(false);\n  const [theme, setTheme] = useState(\"light\");\n\n  const initialStatePromiseRef = useRef({ promise: null });\n  if (!initialStatePromiseRef.current.promise) {\n    initialStatePromiseRef.current.promise = resolvablePromise();\n  }\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\"/rocket.jpeg\");\n      const imageData = await res.blob();\n      const reader = new FileReader();\n      reader.readAsDataURL(imageData);\n\n      reader.onload = function () {\n        const imagesArray = [\n          {\n            id: \"rocket\",\n            dataURL: reader.result,\n            mimeType: \"image/jpeg\",\n            created: 1644915140367,\n          },\n        ];\n\n        initialStatePromiseRef.current.promise.resolve(InitialData);\n        excalidrawRef.current.addFiles(imagesArray);\n      };\n    };\n    fetchData();\n\n    const onHashChange = () => {\n      const hash = new URLSearchParams(window.location.hash.slice(1));\n      const libraryUrl = hash.get(\"addLibrary\");\n      if (libraryUrl) {\n        excalidrawRef.current.importLibrary(libraryUrl, hash.get(\"token\"));\n      }\n    };\n    window.addEventListener(\"hashchange\", onHashChange, false);\n    return () => {\n      window.removeEventListener(\"hashchange\", onHashChange);\n    };\n  }, []);\n\n  const updateScene = () => {\n    const sceneData = {\n      elements: [\n        {\n          type: \"rectangle\",\n          version: 141,\n          versionNonce: 361174001,\n          isDeleted: false,\n          id: \"oDVXy8D6rom3H1-LLH2-f\",\n          fillStyle: \"hachure\",\n          strokeWidth: 1,\n          strokeStyle: \"solid\",\n          roughness: 1,\n          opacity: 100,\n          angle: 0,\n          x: 100.50390625,\n          y: 93.67578125,\n          strokeColor: \"#c92a2a\",\n          backgroundColor: \"transparent\",\n          width: 186.47265625,\n          height: 141.9765625,\n          seed: 1968410350,\n          groupIds: [],\n        },\n      ],\n      appState: {\n        viewBackgroundColor: \"#edf2ff\",\n      },\n    };\n    excalidrawRef.current.updateScene(sceneData);\n  };\n\n  const onLinkOpen = useCallback((element, event) => {\n    const link = element.link;\n    const { nativeEvent } = event.detail;\n    const isNewTab = nativeEvent.ctrlKey || nativeEvent.metaKey;\n    const isNewWindow = nativeEvent.shiftKey;\n    const isInternalLink =\n      link.startsWith(\"/\") || link.includes(window.location.origin);\n    if (isInternalLink && !isNewTab && !isNewWindow) {\n      // signal that we're handling the redirect ourselves\n      event.preventDefault();\n      // do a custom redirect, such as passing to react-router\n      // ...\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1> Excalidraw Example</h1>\n      <Sidebar>\n        <div className=\"button-wrapper\">\n          <button className=\"update-scene\" onClick={updateScene}>\n            Update Scene\n          </button>\n          <button\n            className=\"reset-scene\"\n            onClick={() => {\n              excalidrawRef.current.resetScene();\n            }}\n          >\n            Reset Scene\n          </button>\n          <button\n            onClick={() => {\n              excalidrawRef.current.updateScene({\n                libraryItems: [\n                  {\n                    status: \"published\",\n                    elements: initialData.libraryItems[0],\n                  },\n                  {\n                    status: \"unpublished\",\n                    elements: initialData.libraryItems[1],\n                  },\n                ],\n              });\n            }}\n          >\n            Update Library\n          </button>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={viewModeEnabled}\n              onChange={() => setViewModeEnabled(!viewModeEnabled)}\n            />\n            View mode\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={zenModeEnabled}\n              onChange={() => setZenModeEnabled(!zenModeEnabled)}\n            />\n            Zen mode\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={gridModeEnabled}\n              onChange={() => setGridModeEnabled(!gridModeEnabled)}\n            />\n            Grid mode\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={theme === \"dark\"}\n              onChange={() => {\n                let newTheme = \"light\";\n                if (theme === \"light\") {\n                  newTheme = \"dark\";\n                }\n                setTheme(newTheme);\n              }}\n            />\n            Switch to Dark Theme\n          </label>\n        </div>\n        <div className=\"excalidraw-wrapper\">\n          <Excalidraw\n            ref={excalidrawRef}\n            initialData={initialStatePromiseRef.current.promise}\n            onChange={(elements, state) =>\n              // console.info(\"Elements :\", elements, \"State : \", state)\n              console.info(\"Elements :\", elements)\n            }\n            // onPointerUpdate={(payload) => console.info(payload)}\n            onCollabButtonClick={() =>\n              window.alert(\"You clicked on collab button\")\n            }\n            viewModeEnabled={viewModeEnabled}\n            zenModeEnabled={zenModeEnabled}\n            gridModeEnabled={gridModeEnabled}\n            theme={theme}\n            name=\"Custom name of drawing\"\n            UIOptions={{ canvasActions: { loadScene: false } }}\n            renderTopRightUI={renderTopRightUI}\n            renderFooter={renderFooter}\n            onLinkOpen={onLinkOpen}\n          />\n        </div>\n\n        <div className=\"export-wrapper button-wrapper\">\n          <label className=\"export-wrapper__checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={exportWithDarkMode}\n              onChange={() => setExportWithDarkMode(!exportWithDarkMode)}\n            />\n            Export with dark mode\n          </label>\n        </div>\n      </Sidebar>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}